#summary Open9x French manual

= Open9x - Manuel d'utilisation =

Manuel écrit par Franck Aguerre sur la base d'open9x r1568 / Nov. 2012

<wiki:toc max_depth="3" />

== Avertissement ==

CE LOGICIEL EST FOURNI « TEL QUEL » SANS GARANTIE D'AUCUNE SORTE, EXPLICITE OU IMPLICITE, Y COMPRIS ET SANS LIMITATION, LES GARANTIES DE VALEUR MARCHANDE OU D'ADAPTATION À UN USAGE PARTICULIER. VOUS PORTEZ LA TOTALITÉ DU RISQUE DE QUALITÉ ET DE PERFORMANCE DU PROGRAMME. VOUS PRENEZ À VOTRE CHARGE LE COÛT DE TOUTE INTERVENTION, RÉPARATION OU CORRECTION AU CAS OÙ LE PROGRAMME S'AVÉRERAIT DÉFECTUEUX.


== Introduction ==

La radio IMAX/FLYSKY/TURNIGY/EURGLE 9x est un ensemble d'origine chinoise à micro-contrôleur. L'émetteur comporte un écran LCD de 128*64 pixels, 2 manches 2 axes, 3 potentiomètres, 6 interrupteurs 2 positions, un interrupteur 3 positions et 4 trims digitaux.

Hormis une qualité de réalisation plus qu'honorable et un tarif particulièrement abordable, moins d'une centaine d'euros, sa particularité est d'utiliser une architecture électronique suffisamment simple pour permettre sa rétro-conception. De plus, le micro-contrôleur utilisé (Atmega64A) est flashable (re-programmable), ce qui rend possible le remplacement du logiciel (le firmware, ou FW) d'origine, peu réussi. Il ne restait plus qu'à attendre qu'une personne ayant les compétences nécessaires fasse ce constat pour que naisse le premier firmware alternatif pour 9x.

C'est Thomas Husterer qui fit ce premier pas en avril 2010 avec son logiciel th9x en open-source. Autrement plus élégant, souple et puissant que le logiciel d'origine, celui-ci a entraîné de nouveaux développeurs dans son sillage, toujours dans le principe open-source, avec à chaque fois des améliorations notables (dans l'ordre : er9x par Erez Raviv, gruvin9x par Bryan Rentoul, ersky9x par Mike Blandford, open9x par Bertrand Songis) y compris au niveau matériel : cartes de programmation, cartes mères plus puissantes, vibreur ou sortie audio, adaptateur SD, encodeurs pour navigation à la Multiplex, télémesure, etc.

Tous ces projets sont hébergés ici :
 * th9x : http://code.google.com/p/th9x/
 * er9x : http://code.google.com/p/er9x/
 * gruvin9x : http://code.google.com/p/gruvin9x/
 * ersky9x : http://code.google.com/p/ersky9x/
Il y a aussi, avec une logique différente, Radioclone de Rafal Tomczak : http://radioclone.org/

open9x (http://code.google.com/p/open9x/) représente la dernière évolution et aussi, à mon sens, l'arrivée à maturité de ces projets en offrant plus de fonctionnalités et de souplesse de programmation qu'aucune radio commerciale n'est en mesure d'offrir, indépendamment de sa gratuité ou du faible coût d'achat de l'émetteur.
open9x est épaulé par le logiciel companion9x (http://code.google.com/p/companion9x/, pour Windows, Linux et Mac) qui permet de mettre à jour le FW, mais aussi de sauvegarder, programmer et même simuler les programmes de modèles sur, raffinement s'il en est, une radio virtuelle.

A noter aussi que, étant donnée la simplicité de l'architecture électronique de la 9x, il est tout à fait envisageable de réaliser sa propre carte mère... et même sa radio autour !
Le schéma d'origine : http://9xforums.com/forum/viewtopic.php?f=44&t=199
Un exemple de circuit perso : http://www.rcgroups.com/forums/showthread.php?t=1631369

Il existe aussi deux cartes mères d'upgrade, adaptables sur la 9x ou sur un émetteur perso : http://gruvin9x.com/shop/ et http://www.ersky9x.net/
Outre des capacités mémoire et une puissance de calcul nettement plus élevées que celles de la carte mère d'origine, ces cartes mère offrent de nouvelles possibilités : gestion de carte SD, encodeurs rotatifs, enregistrement des chronos à l'extinction, etc.

=== Le principe Open Source ===

open9x et companion9x sont des projets Open Source sous licence GNU v2. Malgré la somme de travail qu'ils représentent, ils sont donc libres de téléchargement, consultation, redistribution, modification (aux risques et périls de l'utilisateur...) et d'utilisation, sous réserve de respecter les termes de la licence GNU v2 notamment en cas de réutilisation du code.

Il est possible de contribuer au développement de ces projets en remontant des bugs ou des propositions de nouvelles fonctionnalités sur la page ad-hoc du projet, en ouvrant un « issue » :
 * http://code.google.com/p/open9x/issues/list
 * http://code.google.com/p/companion9x/issues/list

A cet effet, il est important de :
 * bien caractériser, au préalable, le bug ou, pour la proposition, son intérêt et sa cohérence
 * le décrire (en anglais... pas le choix!) de manière précise et synthétique
 * pour un bug, ne pas oublier de donner le n° de version du firmware / logiciel

Un forum dédié permet aussi d'échanger sur le sujet :
http://9xforums.com/forum/viewforum.php?f=45

=== Modifier la 9x pour open9x ===

Un document décrivant les différentes étapes de modification de la 9x est proposé dans la rubrique téléchargement d'open9x :
http://code.google.com/p/open9x/downloads/list

Celui-ci n'est valable que pour la carte mère d'origine, les cartes d'upgrade ayant déjà leur propre interfaces de reprogrammation.

Dans les deux cas, le logiciel à utiliser pour la reprogrammation (flashage) est companion9x.

=== Vue de l'émetteur et nomenclature ===

https://open9x.googlecode.com/svn/wiki/images_manual/open9x_identification_organes_CMD_9x.jpg

|| Entrées proportionnelles: || Entrées digitales (interrupteurs): ||
|| 1. Gaz (Thr) : manche de gaz<br> 2. Prf (Ele) : manche de profondeur<br> 3. Ail (Ail) : manche d'ailerons<br> 4. Dir (Rud) : manche de dérive<br> 5. P1/P2/P3 : potentiomètres<br> 6. Trims de manche (impulsion par impulsion ou continu)|| 1. 1. THR<br> 2. RUD<br> 3. ELE<br> 4. ID0/1/2 (3-POS)<br> 5. AIL<br> 6. GEA<br> 7. TRN ||

Tous ces organes sont librement affectables dans open9x, y compris les trims digitaux qui peuvent être utilisés indépendamment des manches auxquels ils se rapportent. 

Pour tous les interrupteurs, la position « 0 » (inactif, par opposition à actif = 1) est « poussé vers l'avant ». Ils peuvent être utilisés en inverse (activation en position 0) quand leur désignation est précédée du symbole « ! », ce qui signifie dans open9x un « non » logique. Ainsi lorsque l’on choisit l'interrupteur ELE, « ELE » indique le fonctionnement normal et « !ELE » indique un fonctionnement inversé. L'option de compilation *AUTOSWITCH* en simplifie l'utilisation, avec une reconnaissance automatique des interrupteurs lors de sa manipulation en phase d'affectation.

Une désignation d'interrupteur finissant par « m » (ex : TRNm) indique un interrupteur momentané (à « bascule »), associé à l'interrupteur physique du même nom : quand ce dernier est actionné, le premier s'active pendant un court instant.

=== Interface de dialogue utilisateur ===

Elle est assurée par un clavier à six boutons situés de part et d'autre de l'écran : un bouton « menu », un bouton « exit » et quatre flèches de navigations. Ces boutons seront identifiés dans ce manuel en gras et entre crochets, par exemple : *[**MENU]*.
Certaines fonctions demandent d'appuyer sur le bouton pendant quelques secondes, c'est à dire un appui long qui sera noté ainsi : *[**MENU LONG]*.

Concernant les flèches de navigation, il faut faire abstraction des indications gravées sur le clavier, notamment les « + » et  « - » positionnés à l'inverse de ce qu'il serait logique. Pour les plus bricoleurs, il est possible d'intervertir ces boutons. Pour éviter toute confusion, ces boutons seront identifiés dans cette notice en tant que *[**LEFT]* (gauche) et *[**RIGHT]* (droite).

=== Navigation ===


D'une manière générale :
 * *[**UP]* / *[**DOWN]* / *[**LEFT]* / *[**RIGHT]* déplacent le curseur haut / bas / gauche / droite.
 * Le bouton *[**MENU]* est utilisé pour sélectionner, éditer, changer un état.
 * Le bouton *[**EXIT]* est utilisé pour sortir, comme on peut le deviner. Une pression amène généralement le curseur en haut de l'écran, une pression supplémentaire ramène à l'écran principal. 

Depuis le menu principal :
 * *[**RIGHT LONG]* ouvre le menu « modèle ».
 * *[**LEFT LONG]* ouvre le menu « paramètres généraux ».
 * *[**MENU LONG]* ouvre le dernier écran utilisé.
 * *[**UP LONG]* ouvre le menu « statistiques ».
 * *[**DOWN LONG]* ouvre le menu « télémesure ».


Depuis un écran, *[**EXIT LONG]* ramène directement à l'écran principal.

Une fois dans un menu, tant que le curseur est situé dans le coin supérieur droit de l'écran, les différents écrans sont parcourus en utilisant *[**LEFT]* / *[**RIGHT]*.

=== Edition / Sauvegarde ===

De manière générale, il n'y a pas de fonction « annuler », toute modification est instantanément enregistrée sur l'EEPROM du micro-contrôleur. Un petit délai (une ou deux secondes) est cependant conseillé avant d'éteindre la radiocommande après une modification pour garantir sa sauvegarde à coup sûr.

La modification d'une valeur se fait en deux temps : *[**MENU]* pour l'éditer en la mettant en surbrillance, puis *[**RIGHT]* / *[**LEFT]* pour la modifier.
Dans le cas d'une zone à deux états (case à cocher, flèche de sens, etc.), c'est le bouton *[**MENU]* qui assure la modification de l'état.
Pour certaines valeurs (gains et valeur de différentiel notamment), *[**MENU LONG]* permet d'affecter une variable globale (cf. menu « Courbes 8/12 ») à la place d'une valeur numérique.
Pour sortir du mode édition, presser *[**MENU]* ou *[**EXIT]*.

Si l'option *DBLKEYS* est activée, des raccourcis clavier suivants sont disponibles lors de l'édition d'une valeur :
*[**LEFT]* + *[**RIGHT]* : inverse le signe de la valeur.
*[**UP]* + *[**RIGHT]* : met la valeur au maxi par défaut (généralement +100%).
*[**DOWN]* + *[**LEFT]* : met la valeur au mini par défaut (généralement -100%).
*[**UP]* + *[**DOWN]*: met la valeur au nominal par défaut (généralement 0).

Voici un aperçu de la structuration de navigation des menus d'open9x :

https://open9x.googlecode.com/svn/wiki/images_manual/open9x_synoptique.png

=== Comment ça marche ===

Tout d'abord, voici un premier aperçu du fonctionnement d'open9x au travers du diagramme de cheminement des ordres depuis les organes de commande et de commutation jusqu'aux servos.

https://open9x.googlecode.com/svn/wiki/images_manual/open9x_cheminement_ordres.png

Ce diagramme est volontairement simplifié aux principaux cheminements des ordres, les choses peuvent être plus complexes dans le détail. Par exemple, les fonctions personnalisées, non représentées ici, peuvent interagir avec les variables globales, pour les réglages en vol, ou avec les interrupteurs personnalisés. De même, ces derniers peuvent utiliser des informations issues de la télémesure, ou être conditionnés à des interrupteurs physiques.

Les entrées analogiques (manches et potentiomètres) ne sont pas utilisées telles quelles, mais après un filtre de calibration garantissant des courses de -100% à +100% de butée à butée (avec 0% pour point milieu). Pour les manches, ces entrées calibrées peuvent ensuite être directement utilisées dans le mixeur ou bien après application d'un formatage (dual-rate, expo, mais aussi courbe).

Les trims digitaux fonctionnent indépendamment des manches auxquels ils se rapportent, ce qui permet au besoin de les différencier par phase de vol (si activées) ou même de les utiliser comme entrée de mixeur.

Le Mixeur est l'articulation majeure d'open9x, sa fonction consistant à mettre en relation les différents organes de commande ou de commutation (= entrées) avec les sorties (= voies =  servos). Cette mise en relation peut être tout aussi bien basique (un manche = une voie) que complexe (plusieurs entrées sur une voie donnée, avec différenciation par phase de vol), suivant le besoin.

Les ordres issus du Mixeur ne sont pas directement dirigés vers les servos, mais passent d'abord un formatage de sortie (Limites) qui régule l'ordre envoyé à chaque servo en le décalant (sub-trim), en l'inversant (sens) ou en écrêtant tout dépassement (limite). Puis finalement les voies sont encodées et envoyées aux servos via le couple module HF / récepteur.

== Écran principal ==

https://open9x.googlecode.com/svn/wiki/images_manual/01_1.png

L'écran principal est découpé en 2 parties. La partie supérieure comporte les éléments suivants :
 * Le nom du modèle.
 * Le nom de la phase de vol (si l'option *PHASES* est activées).
 * La tension de la batterie de l'émetteur/
 * La position des trims.
 * Le chrono 1 et son mode de fonctionnement (paramétrage dans « Réglages modèles 2/12 »).

La partie inférieure comporte quatre écrans accessibles par *[**UP]* / *[**DOWN]* :

|| Visualisation des 16 sorties du récepteur sur deux pages<br>(via *[**LEFT]* / *[**RIGHT]*) || https://open9x.googlecode.com/svn/wiki/images_manual/01_1.png ||
|| Valeurs numériques des 16 sorties du récepteur sur deux pages<br>(via *[**LEFT]* / *[**RIGHT]*) || https://open9x.googlecode.com/svn/wiki/images_manual/01_2.png ||
|| Position des manches et état des interrupteurs sur deux pages<br>(via *[**LEFT]* / *[**RIGHT]*): d'abord les entrées physiques (manches, pots, inters)<br>puis les interrupteurs virtuels (SW1..SWC) || https://open9x.googlecode.com/svn/wiki/images_manual/01_4.png<br>https://open9x.googlecode.com/svn/wiki/images_manual/01_5.png ||
|| Chrono 2 (paramétrage dans « Réglages modèles 2/12 »).<br>*[**EXIT]* le remet à zéro || https://open9x.googlecode.com/svn/wiki/images_manual/01_3.png ||

Dans la vue principale, un appui sur *[**EXIT]* réinitialise les compteurs de la vue courante tandis que *[**EXIT LONG]* réinitialise tous les compteurs ainsi que les données de télémétrie.

== Écrans de statistiques ==

https://open9x.googlecode.com/svn/wiki/images_manual/02_1.png  https://open9x.googlecode.com/svn/wiki/images_manual/02_2.png

Depuis l'écran principal, presser *[**UP LONG]* donne accès aux écrans de statistiques.

Le premier affiche les différents compteurs :
 * Temps total d'allumage de la radio
 * Chrono 1 (paramétrage dans « Réglages modèles 2/12 »)
 * Chrono 2 (paramétrage dans « Réglages modèles 2/12 »)
 * Durée d'utilisation moteur absolue (en minutes / secondes)
 * Durée d'utilisation moteur relativement à la durée totale d'allumage de la radio (en %)

Un graphique temporel de la consigne moteur est aussi affiché.

Le second montre des compteurs internes de l'émetteur, « tmain » représente le temps de calcul. Ce temps augmente avec la complexité des mixages, et peut devenir important (temps de réponse perceptible) suivant la configuration du modèle.

Tous ces compteurs peuvent être remis à zéro par un appui sur *[**MENU]*.

== Paramètres généraux ==

Depuis l'écran principal, *[**LEFT LONG]* donne accès aux paramètres de la radiocommande. Ces réglages sont indépendants du modèle sélectionné.

Les écrans de ce menu sont les suivants :
 # Configuration radio
 # Ecolage
 # Info. version
 # Diagnostics
 # Entrées analogiques
 # Calibration

=== Réglages Radio (1/6) ===

https://open9x.googlecode.com/svn/wiki/images_manual/04_1.png

Cet écran permet de régler les paramètres généraux de l'émetteur :
 # Son / mode :
   * Aucun : pas d'alarme sonore (attention, y compris si la batterie est vide).
   * Alarm: uniquement les alarmes (batterie vide, radio inactive).
   * !NoKey : bips normaux mais pas sur les touches d'édition.
   * Tout : tous les bips activés.
 # Son / durée :  5 durées de bips possibles.
 # Speaker Pitch : ajustement de la fréquence des bips (si l'option *AUDIO* est activée).
 # Haptic Mode : réglage du mode du vibreur (si l'option *HAPTIC* est activée).
   * Aucun : pas d'alarme sonore (attention, y compris si la batterie est vide).
   * Alarm: uniquement les alarmes (batterie vide, radio inactive).
   * !NoKey : bips normaux mais pas sur les touches d'édition.
   * Tout : tous les bips activés.
 # Haptic Force : force du vibreur (de 0 à 5) (si l'option *HAPTIC* est activée).
 # Contraste : contraste de l'afficheur LCD, de 20 (le plus clair) à 45 (le plus sombre).
 # Alarme / batterie faible : seuil de tension de batterie vide.
 # Alarme /  inactivité : délai de non-utilisation des manches à partir duquel la radio alerte l'utilisateur, de 1 à 250 min (0 pour désactiver la fonction).
 # Alarme / mémoire faible : affiche une alerte si l'eeprom dispose de moins de 200 octets de libres lors de l'allumage de l'émetteur, inactif tant que l'alerte n'est pas invalidée.
 # Alarme / sons désactivés : affiche au démarrage une alerte si le BIP est sur « Aucun ». 
 # Filtre ADC: filtre de Conversion Analogique Numérique de la position des manches.
   * SIMP : 1024 pas, temps de calcul (et donc latence) très réduit.
   * OSMP : 2048 pas, légèrement plus lent que SIMP.
   * FILT : filtrage en cas de bruit excessif sur la conversion (servo qui frétillent). Attention, temps de latence de 30 ms.
 # Inversion gaz : position inversée du ralenti de manche des gaz.
 # Bip chrono / minutes : bip à chaque minute quand le compteur tourne.
 # Bip chrono / compte à rebours : 30, 20, 10, 3, 2 et 1 s avant la fin du compteur.
 # Rétroéclairage / alame : activation du rétro-éclairage lors d'un bip de compteur.
 # Rétroéclairage / mode : mode d'activation du rétro-éclairage.
   * Toujours ON.
   * Toujours OFF.
   * Activation par clavier.
   * Activation par clavier + manches.
 # Rétroéclairage / durée : par pas de 5 s.
 # Ecran d'accueil : affiche l'écran d'accueil au démarrage (se passe par un appui sur n'importe quel manche/touche).
 # Fuseau horaire : pour l'heure affichée par le GPS de télémesure.
 # Coordonnées GPS : type d'affichage des coordonnées.
 # Ordre des voies RX : définit l'ordre des mixages de base (G = Gaz, P = Profondeur, A = Ailerons, D = Dérive) générés sur les quatre premières voies à la création d'un modèle.
 # Mode : attribution des manches de l'émetteur aux fonctions principales (gaz, tangage, roulis, lacet).

=== Ecolage (2/6) ===

https://open9x.googlecode.com/svn/wiki/images_manual/05_1.png

Cet écran permet d'affecter les voies d'une radio « élève » (signal PPM, via la prise écolage) aux manches de la radio « maître » et de calibrer leur neutre :
 # Mode : 
  * OFF.
  * += : ajoute la valeur du manche élève à celle du maître.
  * := : remplace la valeur du manche maître par celle de l'élève.
 # % : taux de proportionnalité (gain) appliqué aux ordres de l'élève.
 # Source : entrée élève à affecter au manche maître.

Le multiplicateur est un gain global appliqué à tous les ordres issus de l'émetteur élève.
Pour la calibration du neutre du PPM envoyé par l'émetteur élève, mettre en surbrillance  « Cal » et presser *[**MENU]*.

*NOTA* 
L'émetteur élève doit être non-programmable ou doté d'une programmation neutre (voie = manche).
L'interrupteur d'activation de l'écolage se définit dans la programmation du modèle (cf. paragraphe xx.x).

=== Info version (3/6) ===

https://open9x.googlecode.com/svn/wiki/images_manual/06_1.png

Cet écran affiche la version du FW utilisé :
 * SVN : Le nom SVN du FW.
 * DATE : Date de compilation du FW.
 * TIME : Heure de compilation du FW.
 * EEPR : La version de l'EEPROM et sa variante (FrSky, GVARS, etc.).

=== Diagnostics (4/6) ===

https://open9x.googlecode.com/svn/wiki/images_manual/07_1.png

Cet écran permet de vérifier le bon fonctionnement des boutons, interrupteurs et trims en affichant leur état (on = passage de 0 à 1 et mise en surbrillance).

=== Entrées analogiques (5/6) ===

https://open9x.googlecode.com/svn/wiki/images_manual/08_1.png

Cet écran affiche les valeurs brutes des entrées analogiques en hexadécimal. Les valeurs vont de 0 à 0x3FF (0..1023), les entrées étant les suivantes :
 * A1..A4 : manches
 * A5..A7 : potentiomètres

Il est aussi possible d'étalonner la mesure de la tension batterie : *[**DOWN]* pour mettre la valeur en surbrillance, puis *[**LEFT]* / *[**RIGHT]* pour la diminuer / augmenter afin de la caler sur une mesure au voltmètre.

=== Calibration des entrées analogiques (6/6) ===

https://open9x.googlecode.com/svn/wiki/images_manual/09_1.png

Cet écran permet de calibrer les entrées analogiques A1 – A7.

Pour effectuer la calibration :
 # Presser *[**MENU]*.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/09_2.png

 # Mettre les manches au neutre.
 # Presser *[**MENU]*.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/09_3.png
 # Bouger les manches et potentiomètres de butée à butée (sans forcer...).
 # Presser *[**MENU]*, les valeurs sont sauvegardées.

== Réglages des modèles ==

Depuis l'écran principal, presser *[**RIGHT LONG]* donne accès au menu de sélection/édition des modèles. Il permet de régler les paramètres propres au modèle en cours, au travers des écrans suivants (déplacement entre écrans par *[**RIGHT]* et *[**LEFT]* sur la ligne supérieure) :
 # Mémoires des modèles.
 # Réglages du modèle.
 # Réglages hélicoptères (si l'option *HELI* est activée).
 # Phases de vol (si l'option *PHASES* est activée).
 # Manches (DR/Expo).
 # Mixeurs.
 # Servos (Limites).
 # Courbes  (si l'option *COURBES* est activée).
 # Interrupteurs personnalisables.
 # Fonctions associées aux inters.
 # Télémesures (si l'option *FRSKY* est activée)
 # Assistant de création de Mixeurs (si l'option *TEMPLATES* est activée)

=== Mémoires des modèles (1/12) ===

https://open9x.googlecode.com/svn/wiki/images_manual/10_1.png

Cet écran liste les modèles déjà existants (jusqu'à 16), et permet de charger, dupliquer, déplacer ou effacer un modèle existant ou d'en créer un nouveau.

La gestion de la mémoire est dynamique, avec un affichage de l'espace libre (en octets, en haut de l'écran) et de l'espace utilisé par chaque modèle (à sa droite), ce dernier étant proportionnel à sa complexité (mixages, courbes, options, etc.).

L'étoile « *`*` * » sur la gauche indique le modèle en cours.

*[**UP]* / *[**DOWN]* permet de se déplacer dans la liste des modèles.
Un appui sur *[**MENU LONG]* permet le chargement du modèle sélectionné ou la création d'un nouveau modèle si la mémoire sélectionnée est vide.

==== Pour créer un modèle: ====

 # Se positionner sur la ligne vierge à utiliser avec les touches *[**UP]* / *[**DOWN]*.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/10_2.png
 # Appuyer sur la touche *[**MENU LONG]* pour demander la création.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/10_3.png
 # Le nouveau modèle est automatiquement chargé, son nom par défaut (modifiable) étant attribué sous la forme « MODELE » + numéro de ligne.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/10_4.png

==== Pour supprimer un modèle: ====

 # Se positionner sur la ligne à supprimer avec les touches *[**UP]* / *[**DOWN]*.
 # Appuyer sur la touche *[**MENU]* pour sélectionner la ligne (elle passe en surbrillance).<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/13_1.png
 # Appuyer sur la touche *[**EXIT LONG]* pour demander la suppression (non autorisée, par sécurité, sur le modèle en cours).<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/13_2.png
 # Confirmer avec la touche *[**MENU]* ou annuler avec la touche *[**EXIT]*.

==== Pour dupliquer un modèle: ====

 # Se positionner sur la ligne à copier avec les touches *[**UP]* / *[**DOWN]*.
 # Appuyer sur la touche *[**MENU]* pour sélectionner la ligne (elle passe en surbrillance).<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/11_1.png
 # Appuyer sur *[**UP]* ou *[**DOWN]* pour la dupliquer vers le haut ou vers le bas.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/11_2.png
 # Une fois l'emplacement de destination choisi, appuyer sur *[**MENU]* pour confirmer ou *[**EXIT]* pour annuler l'opération.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/11_3.png

==== Pour déplacer un modèle: ====

 # Se positionner sur la ligne à copier avec les touches *[**UP]* / *[**DOWN]*.
 # Appuyer deux fois sur la touche *[**MENU]* pour sélectionner la ligne (elle passe en surbrillance entourée d'un pointillé).<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/12_1.png
 # Appuyer sur *[**UP]* ou *[**DOWN]* la déplacer vers le haut ou vers le bas.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/12_2.png
 # Une fois l'emplacement de destination choisi, appuyer sur *[**MENU]* pour confirmer ou *[**EXIT]* pour annuler l'opération.<br><br>https://open9x.googlecode.com/svn/wiki/images_manual/12_3.png

*NOTA*
Les fonctions créer / effacer / déplacer / dupliquer des lignes sont particulièrement importantes dans open9x, car elles sont aussi utilisées dans d'autres écrans (« manches » et « mixeurs ») pour gérer à la carte leur fonctionnement.
Une opération de copie ou de déplacement peut être annulée en cours d'exécution en appuyant sur la touche *[**EXIT]*.